#!/usr/bin/with-contenv bashio
# ==============================================================================
# Community Hass.io Add-ons: Network UPS Tools
# Configures Network UPS Tools
# ==============================================================================
readonly BASE_DIR=/etc/nut
readonly UPS_CONF=${BASE_DIR}/ups.conf
readonly NUT_CONF=${BASE_DIR}/nut.conf
readonly UPSD_CONF=${BASE_DIR}/upsd.conf
readonly USERS_CONF=${BASE_DIR}/upsd.users
readonly UPSMON_CONF=${BASE_DIR}/upsmon.conf


_add_override_notice() {
    local file=${1}
    {
        echo
        echo "# --------------------------------------------------------------------------"
        echo "#"
        echo "# This file was automatically generated by Hass.io Network"
        echo "# UPS Tools add-on. Changes to this file will be overwritten."
        echo "#"
        echo "# --------------------------------------------------------------------------"
    } > "${file}"
}


gen_ups_conf() {
    bashio::log.info "Generating ${UPS_CONF}..."
    local name
    local driver
    local port
    local config

    _add_override_notice ${UPS_CONF}
    for device in $(bashio::config "devices|keys[]"); do

        name=$(bashio::config "devices[${device}].name")

        bashio::log.info "Configuring device: ${name}"

        driver=$(bashio::config "devices[${device}].driver")
        port=$(bashio::config "devices[${device}].port")
        config=$(bashio::config "devices[${device}].config")

        {
            echo
            echo "[${name}]"
            echo "  driver = ${driver}"
            echo "  port = ${port}"
        } >> "${UPS_CONF}"

        while read -r option; do
            echo "  ${option}" >> "${UPS_CONF}"
        done <<< $(bashio::config "devices[${device}].config")
    done
}

gen_nut_conf() {
    bashio::log.info "Generating ${NUT_CONF}..."
    local mode

    _add_override_notice ${NUT_CONF}
    mode=$(bashio::config "nut.mode")
    echo "MODE=${mode}" >> "${NUT_CONF}"
}

gen_upsd_conf() {
    bashio::log.info "Generating ${UPSD_CONF}..."
    _add_override_notice ${UPSD_CONF}
    while read -r option; do
        echo "${option}" >> "${UPSD_CONF}"
    done <<< $(bashio::config "upsd")
}

gen_upsd_users() {
    bashio::log.info "Generating ${USERS_CONF}..."
    _add_override_notice ${USERS_CONF}

    if ! bashio::config.true 'leave_front_door_open'; then
        local username
        local password

        for user in $(bashio::config "users|keys[]"); do

            bashio::config.require.username "users[${user}].username"
            username=$(bashio::config "users[${user}].username")

            bashio::log.info "Configuring user: ${username}"
            if ! bashio::config.true 'i_like_to_be_pwned'; then
                bashio::config.require.safe_password "users[${user}].password"
            else
                bashio::config.require.password "users[${user}].password"
            fi
            password=$(bashio::config "users[${user}].password")

            {
                echo
                echo "[${username}]"
                echo "  password = ${password}"
            } >> "${USERS_CONF}"

            for instcmd in $(bashio::config "users[${user}].instcmds"); do
                echo "  instcmds = ${instcmd}" >> "${USERS_CONF}"
            done

            for action in $(bashio::config "users[${user}].actions"); do
                echo "  actions = ${action}" >> "${USERS_CONF}"
            done

            if bashio::config.has_value "users[${user}].upsmon"; then
                upsmon=$(bashio::config "users[${user}].upsmon")
                echo "  upsmon ${upsmon}" >> "${USERS_CONF}"
            fi
        done
    fi
}

gen_upsmon_conf() {
    bashio::log.info "Generating ${UPSMON_CONF}..."
    poweroff_wait=$(bashio::config "nut.poweroff_wait")
    sed -i "s/%%poweroff_wait%%/${poweroff_wait}/g" ${UPSMON_CONF}
}

fix_permissions() {
    bashio::log.info "Setting permissions..."
    chmod -R 660 ${BASE_DIR}/*
    chown -R root:nut ${BASE_DIR}/*
}

# ==============================================================================
# RUN LOGIC
# ------------------------------------------------------------------------------
main() {
    gen_ups_conf
    gen_nut_conf
    gen_upsd_conf
    gen_upsd_users
    gen_upsmon_conf
    fix_permissions
}
main "$@"
